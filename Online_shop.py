
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path
# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, ttk
from PIL import ImageTk
import urllib.parse as up
import crawler_shoppy
import crawler_books
import crawler_pchome
import crawler_yahoo
import crawler_momo


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path("./assets")



def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)




def shopee_search():
    for record in tv.get_children():
        tv.delete(record)
    canvas.itemconfig(title, text='蝦皮商城', fill='#EB6C42')
    canvas.itemconfig(item_search_text, fill='#EB6C42')
    canvas.itemconfig(number_search_text, fill='#EB6C42')
    canvas.itemconfig(price_text, fill='#EB6C42')
    lowerLimit_search_entry.place(width=105, height=32)
    canvas.itemconfig(frame1, fill='#EB6C42')
    search_button['image'] = search_button_list[0]
    canvas.itemconfig(price_box1, image=price_box_img)
    canvas.itemconfig(price_box2, image=price_box_img)
    lowerLimit_search_entry.place(width=105, height=32)
    upperLimit_search_entry.place(width=105, height=32)
    canvas.itemconfig(range_text, fill='#EB6C42')





def pchome_search():
    for record in tv.get_children():
        tv.delete(record)
    canvas.itemconfig(title, text='Pchome商城', fill='#326DBC')
    canvas.itemconfig(item_search_text, fill='#326DBC')
    canvas.itemconfig(number_search_text, fill='#326DBC')
    canvas.itemconfig(price_text, fill='#326DBC')
    canvas.itemconfig(frame1, fill='#326DBC')
    search_button['image'] = search_button_list[1]
    canvas.itemconfig(price_box1, image=price_box_img)
    canvas.itemconfig(price_box2, image=price_box_img)
    lowerLimit_search_entry.place(width=105, height=32)
    upperLimit_search_entry.place(width=105, height=32)
    canvas.itemconfig(range_text, fill='#326DBC')





def yahoo_search():
    for record in tv.get_children():
        tv.delete(record)
    canvas.itemconfig(title, text='Yahoo商城', fill='#A060CE')
    canvas.itemconfig(item_search_text, fill='#A060CE')
    canvas.itemconfig(number_search_text, fill='#A060CE')
    canvas.itemconfig(price_text, fill='#A060CE')
    canvas.itemconfig(frame1, fill='#A060CE')
    search_button['image'] = search_button_list[2]
    canvas.itemconfig(price_box1, image=price_box_img)
    canvas.itemconfig(price_box2, image=price_box_img)
    lowerLimit_search_entry.place(width=105, height=32)
    upperLimit_search_entry.place(width=105, height=32)
    canvas.itemconfig(range_text, fill='#A060CE')





def momo_search():
    for record in tv.get_children():
        tv.delete(record)
    canvas.itemconfig(title, text='Momo商城', fill='#DF3575')
    canvas.itemconfig(item_search_text, fill='#DF3575')
    canvas.itemconfig(number_search_text, fill='#DF3575')
    canvas.itemconfig(price_text, fill='#DF3575')
    canvas.itemconfig(frame1, fill='#DF3575')
    search_button['image'] = search_button_list[3]
    canvas.itemconfig(price_box1, image=price_box_img)
    canvas.itemconfig(price_box2, image=price_box_img)
    lowerLimit_search_entry.place(width=105, height=32)
    upperLimit_search_entry.place(width=105, height=32)
    canvas.itemconfig(range_text, fill='#DF3575')





def books_search():
    for record in tv.get_children():
        tv.delete(record)
    canvas.itemconfig(title, text='博客來書店', fill='#93B846')
    canvas.itemconfig(item_search_text, fill='#93B846')
    canvas.itemconfig(number_search_text, fill='#93B846')
    canvas.itemconfig(frame1, fill='#93B846')
    search_button['image'] = search_button_list[4]
    canvas.itemconfig(price_text, fill='#FFFFFF')
    canvas.itemconfig(price_box1, image='')
    canvas.itemconfig(price_box2, image='')
    canvas.itemconfig(range_text, fill='#FFFFFF')
    lowerLimit_search_entry.place(width=0, height=0)
    upperLimit_search_entry.place(width=0, height=0)





def get_result():
    for record in tv.get_children():
        tv.delete(record)

    itemSearch = item_search_entry.get()
    itemSearch = up.quote(itemSearch)
    if number_search_entry.get() == '':
        num = 100
    else:
        num = int(number_search_entry.get())
    lowerLimit = lowerLimit_search_entry.get()
    upperLimit = upperLimit_search_entry.get()

    shop_name = canvas.itemcget(title, 'text')
    if shop_name == '蝦皮商城':
        l = crawler_shoppy.getData(num, itemSearch, lowerLimit, upperLimit, [])
        for itemNum in range(len(l)):
            if itemNum % 2 == 0:
                tv.insert(parent='', index='end', iid=itemNum, tags=('evenrow',),
                          values=(itemNum + 1, l[itemNum][0], str(l[itemNum][1][0]) + ' TWD', l[itemNum][1][1]))
            else:
                tv.insert(parent='', index='end', iid=itemNum, tags=('oddrow',),
                          values=(itemNum + 1, l[itemNum][0], str(l[itemNum][1][0]) + ' TWD', l[itemNum][1][1]))

            def to_website(event):
                input_id = tv.selection()
                input_item = tv.item(input_id, 'values')
                import webbrowser
                webbrowser.open(input_item[3])

            tv.bind('<Double-1>', to_website)
        window.update()
        print('搜索完畢')
    elif shop_name == 'Pchome商城':
        l = crawler_pchome.getData(num, itemSearch, lowerLimit, upperLimit, [])
        for itemNum in range(len(l)):
            if itemNum % 2 == 0:
                tv.insert(parent='', index='end', iid=itemNum, tags=('evenrow',),
                          values=(itemNum + 1, l[itemNum][0], str(l[itemNum][1][0]) + ' TWD', l[itemNum][1][1]))
            else:
                tv.insert(parent='', index='end', iid=itemNum, tags=('oddrow',),
                          values=(itemNum + 1, l[itemNum][0], str(l[itemNum][1][0]) + ' TWD', l[itemNum][1][1]))

            def to_website(event):
                input_id = tv.selection()
                input_item = tv.item(input_id, 'values')
                import webbrowser
                webbrowser.open(input_item[3])

            tv.bind('<Double-1>', to_website)
        window.update()
        print('搜索完畢')
    elif shop_name == 'Yahoo商城':
        l = crawler_yahoo.getData(num, itemSearch, lowerLimit, upperLimit, [])
        for itemNum in range(len(l)):
            if itemNum % 2 == 0:
                tv.insert(parent='', index='end', iid=itemNum, tags=('evenrow',),
                          values=(itemNum + 1, l[itemNum][0], str(l[itemNum][1][0]) + ' TWD', l[itemNum][1][1]))
            else:
                tv.insert(parent='', index='end', iid=itemNum, tags=('oddrow',),
                          values=(itemNum + 1, l[itemNum][0], str(l[itemNum][1][0]) + ' TWD', l[itemNum][1][1]))

            def to_website(event):
                input_id = tv.selection()
                input_item = tv.item(input_id, 'values')
                import webbrowser
                webbrowser.open(input_item[3])

            tv.bind('<Double-1>', to_website)
        window.update()
        print('搜索完畢')
    elif shop_name == 'Momo商城':
        l = crawler_momo.getData(num, itemSearch, lowerLimit, upperLimit, [])
        for itemNum in range(len(l)):
            if itemNum % 2 == 0:
                tv.insert(parent='', index='end', iid=itemNum, tags=('evenrow',),
                          values=(itemNum + 1, l[itemNum][0], str(l[itemNum][1][0]) + ' TWD', l[itemNum][1][1]))
            else:
                tv.insert(parent='', index='end', iid=itemNum, tags=('oddrow',),
                          values=(itemNum + 1, l[itemNum][0], str(l[itemNum][1][0]) + ' TWD', l[itemNum][1][1]))

            def to_website(event):
                input_id = tv.selection()
                input_item = tv.item(input_id, 'values')
                import webbrowser
                webbrowser.open(input_item[3])

            tv.bind('<Double-1>', to_website)
        window.update()
        print('搜索完畢')
    elif shop_name == '博客來書店':
        l = crawler_books.getData(num, itemSearch, [])
        for itemNum in range(len(l)):
            if itemNum % 2 == 0:
                tv.insert(parent='', index='end', iid=itemNum, tags=('evenrow',),
                          values=(itemNum + 1, l[itemNum][0], l[itemNum][1][0], l[itemNum][1][2]))
            else:
                tv.insert(parent='', index='end', iid=itemNum, tags=('oddrow',),
                          values=(itemNum + 1, l[itemNum][0], l[itemNum][1][0], l[itemNum][1][2]))

            def to_website(event):
                input_id = tv.selection()
                input_item = tv.item(input_id, 'values')
                import webbrowser
                webbrowser.open(input_item[3])

            tv.bind('<Double-1>', to_website)
        window.update()
        print('搜索完畢')


        





window = Tk()
window.title('網路商城查詢器')
window.geometry("1200x600")
window.configure(bg="#FFFFFF")



canvas = Canvas(
    window,
    bg="#FFFFFF",
    height=600,
    width=1200,
    bd=0,
    highlightthickness=0,
    relief="ridge")
canvas.place(x=0, y=0)


# 建立右方橘色的區塊
frame1 = canvas.create_rectangle(
    520.0,
    0.0,
    1200.0,
    600.0,
    fill="#EB6C42",
    outline="")

# 建立標題
title = canvas.create_text(
    236.0,
    60.0,
    anchor="nw",
    text="蝦皮商城",
    fill="#EB6C42",
    font=("Roboto", 35 * -1))


# 蝦皮按鈕
shopee_img = ImageTk.PhotoImage(file=relative_to_assets("shopee.png"))
shopee_button = Button(
    image=shopee_img,
    borderwidth=0,
    highlightthickness=0,
    command=shopee_search,
    relief="flat")
shopee_button.place(
    x=0.0,
    y=0.0,
    width=120.0,
    height=120.0)


# pchome按鈕
pchome_img = ImageTk.PhotoImage(file=relative_to_assets("pchome.png"))
pchome_button = Button(
    image=pchome_img,
    borderwidth=0,
    highlightthickness=0,
    command=pchome_search,
    relief="flat")
pchome_button.place(
    x=0.0,
    y=120.0,
    width=120.0,
    height=120.0)


# yahoo按鈕
yahoo_img = ImageTk.PhotoImage(file=relative_to_assets("yahoo.png"))
yahoo_button = Button(
    image=yahoo_img,
    borderwidth=0,
    highlightthickness=0,
    command=yahoo_search,
    relief="flat")
yahoo_button.place(
    x=0.0,
    y=240.0,
    width=120.0,
    height=120.0)


# momo按鈕
momo_img = ImageTk.PhotoImage(file=relative_to_assets("momo.png"))
momo_button = Button(
    image=momo_img,
    borderwidth=0,
    highlightthickness=0,
    command=momo_search,
    relief="flat")
momo_button.place(
    x=0.0,
    y=360.0,
    width=120.0,
    height=120.0)

# 博客來按鈕
books_img = ImageTk.PhotoImage(file=relative_to_assets("books.png"))
books_button = Button(
    image=books_img,
    borderwidth=0,
    highlightthickness=0,
    command=books_search,
    relief="flat")
books_button.place(
    x=0.0,
    y=480.0,
    width=120.0,
    height=120.0)






# 以圖片來建立第一個entry物件，物品搜索格子
entry_img = ImageTk.PhotoImage(file=relative_to_assets("entry_1.png"))
entry_box1 = canvas.create_image(
    323.5,
    193.0,
    image=entry_img)
item_search_entry = Entry(
    bd=0,
    bg="#F5F5F5",
    highlightthickness=0)
item_search_entry.place(
    x=187.0,
    y=177.0,
    width=273.0,
    height=32.0)
item_search_text = canvas.create_text(
    182.0,
    156.0,
    anchor="nw",
    text="請輸入想搜尋的商品或關鍵字（必填）",
    fill="#EB6C42",
    font=("Roboto", 16 * -1))

# 以圖片來建立第二個entry物件，物品搜索數量
entry_box2 = canvas.create_image(
    323.5,
    308.5,
    image=entry_img)
number_search_entry = Entry(
    bd=0,
    bg="#F5F5F5",
    highlightthickness=0)
number_search_entry.place(
    x=187.0,
    y=292.5,
    width=273.0,
    height=32.0)
number_search_text = canvas.create_text(
    182.0,
    271.0,
    anchor="nw",
    text="請輸入想搜尋的商品數量（預設100個）",
    fill="#EB6C42",
    font=("Roboto", 16 * -1))


# 輸入價格的兩個框框、文字
price_text = canvas.create_text(
    182.0,
    387.0,
    anchor="nw",
    text="請輸入價格（可空白）",
    fill="#EB6C42",
    font=("Roboto", 16 * -1))
# 第一個價格entry
price_box_img = ImageTk.PhotoImage(file=relative_to_assets("entry_3.png"))
price_box1 = canvas.create_image(
    239.5,
    428.0,
    image=price_box_img)
lowerLimit_search_entry = Entry(
    bd=0,
    bg="#F5F5F5",
    highlightthickness=0)
lowerLimit_search_entry.place(
    x=187.0,
    y=411.5,
    width=105.0,
    height=32.0)
# 第二個價格entry
price_box2 = canvas.create_image(
    401.0,
    428.0,
    image=price_box_img)
upperLimit_search_entry = Entry(
    bd=0,
    bg="#F5F5F5",
    highlightthickness=0)
upperLimit_search_entry.place(
    x=342.0,
    y=411.5,
    width=105.0,
    height=32.0)
# 價格範圍符號
range_text = canvas.create_text(
    307.0,
    408.0,
    anchor="nw",
    text="~",
    fill="#000000",
    font=("Roboto", 30 * -1))



# 設定treeview的style
tv_style = ttk.Style()
tv_style.theme_use('clam')
tv_style.configure('Treeview',
                   background='#EB6C42',
                   foreground='black',
                   rowheight=25,)
tv_style.map('Treeview',
             background=[('selected', '#FF8F59')])
# 建立treeview物件，以treeview來顯示結果
tv = ttk.Treeview(window, selectmode='extended')

tv['columns'] = ('編號', '商品名稱', '價格', '網址')
tv.column('#0', width=0, stretch='NO')
tv.column('編號', anchor='center', width=40, stretch='YES')
tv.column('商品名稱', anchor='w', width=450, stretch='YES')
tv.column('價格', anchor='center', width=130, stretch='YES')
tv.column('網址', anchor='center', width=0, stretch='NO')
tv.heading('#0', text='', anchor='center')
tv.heading('編號', text='編號', anchor='center')
tv.heading('商品名稱', text='商品名稱', anchor='center')
tv.heading('價格', text='價格', anchor='center')
tv.heading('網址', text='網址', anchor='center')
tv.pack(fill='both', expand=1)
tv.place(x=535, y=30, width=650, height=520)
tv.tag_configure('oddrow', background='white')
tv.tag_configure('evenrow', background='lightblue')





# 建立搜索按鈕
search_button_list = [ImageTk.PhotoImage(file=relative_to_assets("shopee_search.png")),
                      ImageTk.PhotoImage(file=relative_to_assets("pchome_search.png")),
                      ImageTk.PhotoImage(file=relative_to_assets("yahoo_search.png")),
                      ImageTk.PhotoImage(file=relative_to_assets("momo_search.png")),
                      ImageTk.PhotoImage(file=relative_to_assets("books_search.png"))]
search_button_img = search_button_list[0]
search_button = Button(
    image=search_button_img,
    borderwidth=0,
    highlightthickness=0,
    command=get_result,
    relief="flat")
search_button.place(
    x=245.0,
    y=500.0,
    width=142.0,
    height=47.0)



window.update()
window.resizable(False, False)
window.mainloop()
